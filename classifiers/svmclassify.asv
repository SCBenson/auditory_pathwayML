load('trial99','bin_array')
% function svmPredict = svmclassify(trial, sweep_height)

%Support Vector Machine Classification

% Creates a hyper plane of n-dimensions to
% classify the .spk files; there are 16 classes.

% One row per observation
% One column per predictor
X = bin_array;
% The list of VCVs to create the Y input matrix
p = ["ABA", "ADA", "AFA", "AGA", "AKA", "ALA", "AMA", "ANA", "APA", "ASA", "ASHA", "ATA", "ATHA", "AVA", "AYA", "AZA"];


% make sure we enter the height of the sweeps into the function
output_length = 3*10;
phon = [];
% phonemes = string.empty(0,length(bin_array));
phonemes = [
for i = 1:length(p)
    pho = p(i);
    phon = pho;
    phone = repmat(phon,output_length);
    phone = phone(1,:);
    phonemes = cat(1,phonemes,phone);
end

Y = repmat(phonemes,output_length);
Y = Y(1,:);

idxPhoneme = (Y=="ASHA")';
S = X(idxPhoneme,:);
organisedPhonemes = [];
for i = 1:length(p)
    idx = (Y==p(i));
    samePhoneme = X(idx,:);
    organisedPhonemes = cat(1,organisedPhonemes,samePhoneme);
end
% Randomise the data for test and train
ClassTreeEns = fitensemble(X,Y,'RUSBoost',250,'Tree');
Y_hat = predict(ClassTreeEns, X);
acc = Y_hat == Y';
total_acc = sum(acc(:,1));
percentage_correct = total_acc/480;
% imagesc(acc)

